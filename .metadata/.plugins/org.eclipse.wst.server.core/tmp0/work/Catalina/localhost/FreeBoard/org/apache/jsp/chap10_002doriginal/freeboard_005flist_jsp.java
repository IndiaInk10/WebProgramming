/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.60
 * Generated at: 2022-03-28 01:55:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.chap10_002doriginal;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.*;
import java.sql.*;

public final class freeboard_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/chap10-original/dbconn.jsp", Long.valueOf(1648431986670L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write(" \r\n");
      out.write(" \r\n");
      out.write("<HTML>\r\n");
      out.write("<HEAD><TITLE>게시판</TITLE>\r\n");
      out.write("<link href=\"freeboard.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<SCRIPT language=\"javascript\">\r\n");
      out.write(" function check(){\r\n");
      out.write("  with(document.msgsearch){\r\n");
      out.write("   if(sval.value.length == 0){\r\n");
      out.write("    alert(\"검색어를 입력해 주세요!!\");\r\n");
      out.write("    sval.focus();\r\n");
      out.write("    return false;\r\n");
      out.write("   }	\r\n");
      out.write("   document.msgsearch.submit();\r\n");
      out.write("  }\r\n");
      out.write(" }\r\n");
      out.write(" function rimgchg(p1,p2) {\r\n");
      out.write("  if (p2==1) \r\n");
      out.write("   document.images[p1].src= \"image/open.gif\";\r\n");
      out.write("  else\r\n");
      out.write("   document.images[p1].src= \"image/arrow.gif\";\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write(" function imgchg(p1,p2) {\r\n");
      out.write("  if (p2==1) \r\n");
      out.write("   document.images[p1].src= \"image/open.gif\";\r\n");
      out.write("  else\r\n");
      out.write("   document.images[p1].src= \"image/close.gif\";\r\n");
      out.write(" }\r\n");
      out.write("</SCRIPT>\r\n");
      out.write("</HEAD>\r\n");
      out.write("<BODY>\r\n");
      out.write("<P>\r\n");
      out.write("<P align=center><FONT color=#0000ff face=굴림 size=3><STRONG>자유 게시판</STRONG></FONT></P> \r\n");
      out.write("<P>\r\n");
      out.write("<CENTER>\r\n");
      out.write(" ");
      out.write('\r');
      out.write('\n');

	Connection con = null;
	
	String url = "jdbc:mysql://localhost:3306/fboard";
	String user = "root";
	String password = "1234";
	
	Class.forName("com.mysql.jdbc.Driver");
	con = DriverManager.getConnection(url, user, password);

      out.write("\r\n");
      out.write(" <TABLE border=0 width=600 cellpadding=4 cellspacing=0>\r\n");
      out.write("  <tr align=\"center\"> \r\n");
      out.write("   <td colspan=\"5\" height=\"1\" bgcolor=\"#1F4F8F\"></td>\r\n");
      out.write("  </tr>\r\n");
      out.write("  <tr align=\"center\" bgcolor=\"#87E8FF\"> \r\n");
      out.write("   <td width=\"42\" bgcolor=\"#DFEDFF\"><font size=\"2\">번호</font></td>\r\n");
      out.write("   <td width=\"340\" bgcolor=\"#DFEDFF\"><font size=\"2\">제목</font></td>\r\n");
      out.write("   <td width=\"84\" bgcolor=\"#DFEDFF\"><font size=\"2\">등록자</font></td>\r\n");
      out.write("   <td width=\"78\" bgcolor=\"#DFEDFF\"><font size=\"2\">날짜</font></td>\r\n");
      out.write("   <td width=\"49\" bgcolor=\"#DFEDFF\"><font size=\"2\">조회</font></td>\r\n");
      out.write("  </tr>\r\n");
      out.write("  <tr align=\"center\"> \r\n");
      out.write("   <td colspan=\"5\" bgcolor=\"#1F4F8F\" height=\"1\"></td>\r\n");
      out.write("  </tr>\r\n");
      out.write(" ");
 
  Vector name=new Vector();
  Vector inputdate=new Vector();
  Vector email=new Vector();
  Vector subject=new Vector();
  Vector rcount=new Vector();
  
  Vector step=new Vector();
  Vector keyid=new Vector();
  int where=1;

  int totalgroup=0;
  int maxpages=2;
  int startpage=1;
  int endpage=startpage+maxpages-1;
  int wheregroup=1;

  if (request.getParameter("go") != null) {
   where = Integer.parseInt(request.getParameter("go"));
   wheregroup = (where-1)/maxpages + 1;
   startpage=(wheregroup-1) * maxpages+1;  
   endpage=startpage+maxpages-1; 
  } else if (request.getParameter("gogroup") != null) {
   wheregroup = Integer.parseInt(request.getParameter("gogroup"));
   startpage=(wheregroup-1) * maxpages+1;  
   where = startpage ; 
   endpage=startpage+maxpages-1; 
  }
  int nextgroup=wheregroup+1;
  int priorgroup= wheregroup-1;

  int nextpage=where+1;
  int priorpage = where-1;
  int startrow=0;
  int endrow=0;
  int maxrows=5;
  int totalrows=0;
  int totalpages=0;

  int id=0;

  String em=null;
// ctrl + shift + c
//   Connection con= null;
  Statement st =null;
  ResultSet rs =null;

//   try {
//    Class.forName("org.gjt.mm.mysql.Driver");
//   } catch (ClassNotFoundException e ) {
//    out.println(e);
//   }

//   try{
//    con = DriverManager.getConnection("jdbc:mysql://localhost:3306/fboard?useUnicode=true&characterEncoding=euckr","root","multi");
//   } catch (SQLException e) {
//    out.println(e);
//   }

 try {
  st = con.createStatement();
  String sql = "select * from freeboard order by" ;
  sql = sql + " masterid desc, replynum, step, id" ;
  rs = st.executeQuery(sql);

  if (!(rs.next()))  {
   out.println("게시판에 올린 글이 없습니다");
  } else {
   do {
    keyid.addElement(new Integer(rs.getInt("id")));
    name.addElement(rs.getString("name"));
    email.addElement(rs.getString("email"));
    String idate = rs.getString("inputdate");
    idate = idate.substring(0,8);
    inputdate.addElement(idate);
    subject.addElement(rs.getString("subject"));
    rcount.addElement(new Integer(rs.getInt("readcount")));
    step.addElement(new Integer(rs.getInt("step")));
   }while(rs.next());
   totalrows = name.size();
   totalpages = (totalrows-1)/maxrows +1;
   startrow = (where-1) * maxrows;
   endrow = startrow+maxrows-1  ;
   if (endrow >= totalrows)
    endrow=totalrows-1;
  
   totalgroup = (totalpages-1)/maxpages +1;
   if (endpage > totalpages) 
    endpage=totalpages;

   for(int j=startrow;j<=endrow;j++) {
    String temp=(String)email.elementAt(j);
    if ((temp == null) || (temp.equals("")) ) 
     em= (String)name.elementAt(j); 
    else
     em = "<A href=mailto:" + temp + ">" + name.elementAt(j) + "</A>";

    id= totalrows-j;
    if(j%2 == 0){
     out.println("<TR bgcolor='#FFFFFF' onMouseOver=\" bgColor= '#DFEDFF'\" onMouseOut=\"bgColor=''\">");	
    } else {
     out.println("<TR bgcolor='#F4F4F4' onMouseOver=\" bgColor= '#DFEDFF'\" onMouseOut=\"bgColor='#F4F4F4'\">");
    } 
    out.println("<TD align=center>");
    out.println(id+"</TD>");
    out.println("<TD>");
    int stepi= ((Integer)step.elementAt(j)).intValue();
    int imgcount = j-startrow; 
    if (stepi > 0 ) {
     for(int count=0; count < stepi; count++)
      out.print("&nbsp;&nbsp;");
     out.println("<IMG name=icon"+imgcount+ " src=image/arrow.gif>");
     out.print("<A href=freeboard_read.jsp?id=");
     out.print(keyid.elementAt(j) + "&page=" + where );
     out.print(" onmouseover=\"rimgchg(" + imgcount + ",1)\"");
     out.print(" onmouseout=\"rimgchg(" + imgcount + ",2)\">");
    } else {
     out.println("<IMG name=icon"+imgcount+ " src=image/close.gif>");
     out.print("<A href=freeboard_read.jsp?id=");
     out.print(keyid.elementAt(j) + "&page=" + where );
     out.print(" onmouseover=\"imgchg(" + imgcount + ",1)\"");
     out.print(" onmouseout=\"imgchg(" + imgcount + ",2)\">");
    }
    out.println(subject.elementAt(j) + "</TD>");
    out.println("<TD align=center>");
    out.println(em+ "</TD>");
    out.println("<TD align=center>");
    out.println(inputdate.elementAt(j)+ "</TD>");
    out.println("<TD align=center>");
    out.println(rcount.elementAt(j)+ "</TD>");
    out.println("</TR>"); 
   }
   rs.close();
  }
  out.println("</TABLE>");
  st.close();
  con.close();
 } catch (java.sql.SQLException e) {
  out.println(e);
 } 

 if (wheregroup > 1) {
  out.println("[<A href=freeboard_list.jsp?gogroup=1>처음</A>]"); 
  out.println("[<A href=freeboard_list.jsp?gogroup="+priorgroup +">이전</A>]");
 } else {
  out.println("[처음]") ;
  out.println("[이전]") ;
 }
 if (name.size() !=0) { 
  for(int jj=startpage; jj<=endpage; jj++) {
   if (jj==where) 
    out.println("["+jj+"]") ;
   else
    out.println("[<A href=freeboard_list.jsp?go="+jj+">" + jj + "</A>]") ;
   } 
  }
  if (wheregroup < totalgroup) {
   out.println("[<A href=freeboard_list.jsp?gogroup="+ nextgroup+ ">다음</A>]");
   out.println("[<A href=freeboard_list.jsp?gogroup="+ totalgroup + ">마지막</A>]");
  } else {
   out.println("[다음]");
   out.println("[마지막]");
  }
  out.println ("전체 글수 :"+totalrows); 
 
      out.write("\r\n");
      out.write("<!--<TABLE border=0 width=600 cellpadding=0 cellspacing=0>\r\n");
      out.write(" <TR>\r\n");
      out.write("  <TD align=right valign=bottom>\r\n");
      out.write("   <A href=\"freeboard_write.htm\"><img src=\"image/write.gif\" width=\"66\" height=\"21\" border=\"0\"></A>\r\n");
      out.write("   </TD>\r\n");
      out.write("  </TR>\r\n");
      out.write(" </TABLE>-->\r\n");
      out.write("\r\n");
      out.write("<FORM method=\"post\" name=\"msgsearch\" action=\"freeboard_search.jsp\">\r\n");
      out.write("<TABLE border=0 width=600 cellpadding=0 cellspacing=0>\r\n");
      out.write(" <TR>\r\n");
      out.write("  <TD align=right width=\"241\"> \r\n");
      out.write("   <SELECT name=stype >\r\n");
      out.write("    <OPTION value=1 >이름\r\n");
      out.write("    <OPTION value=2 >제목\r\n");
      out.write("    <OPTION value=3 >내용\r\n");
      out.write("    <OPTION value=4 >이름+제목\r\n");
      out.write("    <OPTION value=5 >이름+내용\r\n");
      out.write("    <OPTION value=6 >제목+내용\r\n");
      out.write("    <OPTION value=7 >이름+제목+내용\r\n");
      out.write("   </SELECT>\r\n");
      out.write("  </TD>\r\n");
      out.write("  <TD width=\"127\" align=\"center\">\r\n");
      out.write("   <INPUT type=text size=\"17\" name=\"sval\" >\r\n");
      out.write("  </TD>\r\n");
      out.write("  <TD width=\"115\">&nbsp;<a href=\"#\" onClick=\"check();\"><img src=\"image/serach.gif\" border=\"0\" align='absmiddle'></A></TD>\r\n");
      out.write("  <TD align=right valign=bottom width=\"117\"><A href=\"freeboard_write.htm\"><img src=\"image/write.gif\" border=\"0\"></TD>\r\n");
      out.write(" </TR>\r\n");
      out.write("</TABLE>\r\n");
      out.write("</FORM>\r\n");
      out.write("</BODY>\r\n");
      out.write("</HTML>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
