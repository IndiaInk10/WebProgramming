/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.60
 * Generated at: 2022-05-30 02:40:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ch08;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class validation042_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../bootstrap-4.6.1-dist/css/bootstrap.min.css\">\r\n");
      out.write("<title>Validation</title>\r\n");
      out.write("</head>\r\n");
      out.write("<script type=\"text/javascript\">	\r\n");
      out.write("	function resetForm() {\r\n");
      out.write("		var id = document.getElementById(\"id\");\r\n");
      out.write("		var name = document.getElementById(\"name\");\r\n");
      out.write("		var age = document.getElementById(\"age\");\r\n");
      out.write("		var email = document.getElementById(\"email\");\r\n");
      out.write("		\r\n");
      out.write("		id.value = \"\";\r\n");
      out.write("		name.value = \"\";\r\n");
      out.write("		age.value = \"\";\r\n");
      out.write("		email.value = \"\";\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function checkForm() {\r\n");
      out.write("		var regExpEmpty = /\\s/;\r\n");
      out.write("		var regExpName = /^[가-힣]*$/;\r\n");
      out.write("		var regExpAge = /^[0-9]/;\r\n");
      out.write("		var regExpEmail = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\r\n");
      out.write("		\r\n");
      out.write("		var id = document.getElementById(\"id\").value;\r\n");
      out.write("		var name = document.getElementById(\"name\").value;\r\n");
      out.write("		var age = document.getElementById(\"age\").value;\r\n");
      out.write("		var email = document.getElementById(\"email\").value;\r\n");
      out.write("		\r\n");
      out.write("		if (id.length < 4) {\r\n");
      out.write("			alert(\"아이디를 4자 이상 입력해주세요\");\r\n");
      out.write("			document.form.id.select();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if(name == \"\") {\r\n");
      out.write("			alert(\"이름을 입력해주세요\");\r\n");
      out.write("			document.form.name.select();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		else if(regExpEmpty.test(name)) {\r\n");
      out.write("			alert(\"이름은 공백 입력할 수 없습니다.\");\r\n");
      out.write("			document.form.name.select();\r\n");
      out.write("			return false;\r\n");
      out.write("		} else if (!regExpName.test(name)) {\r\n");
      out.write("			alert(\"이름은 한글만으로 입력해 주세요!\");\r\n");
      out.write("			document.form.name.select();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if(age == \"\") {\r\n");
      out.write("			alert(\"나이을 입력해주세요\");\r\n");
      out.write("			document.form.age.select();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		else if(regExpEmpty.test(age)) {\r\n");
      out.write("			alert(\"나이는 공백 입력할 수 없습니다.\");\r\n");
      out.write("			document.form.age.select();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		else if(!regExpAge.test(age)){\r\n");
      out.write("			alert(\"나이는 숫자만으로 입력해 주세요!\");\r\n");
      out.write("			document.form.age.select();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if(email == \"\") {\r\n");
      out.write("			alert(\"이메일을 입력해주세요\");\r\n");
      out.write("			document.form.email.select();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		else if(regExpEmpty.test(email)) {\r\n");
      out.write("			alert(\"이메일은 공백 입력할 수 없습니다.\");\r\n");
      out.write("			document.form.email.select();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		else if(!regExpEmail.test(email)){\r\n");
      out.write("			alert(\"이메일 입력을 확인해 주세요!\");\r\n");
      out.write("			document.form.email.select();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		document.form.submit();\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("	<form onSubmit=\"return false;\" class=\"container form-horizontal\" name=\"form\" action=\"validation_process042.jsp\" method=\"post\">\r\n");
      out.write("		<div class=\"form-group row\" >\r\n");
      out.write("			<label class=\"col-3\">아이디</label>\r\n");
      out.write("			<div class=\"col-9 pr-0\">\r\n");
      out.write("				<input placeholder=\"예: abcd\" type=\"text\" id=\"id\"  name=\"id\" class=\"form-control\">\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"form-group row\" >\r\n");
      out.write("			<label class=\"col-3\">이름</label>\r\n");
      out.write("			<div class=\"col-9 pr-0\">\r\n");
      out.write("				<input placeholder=\"예: 홍길동\" type=\"text\" id=\"name\"  name=\"name\" class=\"form-control\">\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"form-group row\" >\r\n");
      out.write("			<label class=\"col-3\">나이</label>\r\n");
      out.write("			<div class=\"col-9 pr-0\">\r\n");
      out.write("				<input placeholder=\"예: 숫자만 허용\" type=\"text\" id=\"age\"  name=\"age\" class=\"form-control\">\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"form-group row\" >\r\n");
      out.write("			<label class=\"col-3\">이메일</label>\r\n");
      out.write("			<div class=\"col-9 pr-0\">\r\n");
      out.write("				<input placeholder=\"예: ab@ab.ab.ab\" type=\"text\" id=\"email\"  name=\"email\" class=\"form-control\">\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"form-group row justify-content-end\" >\r\n");
      out.write("			<button class=\"btn btn-primary mr-1\" onclick=\"resetForm()\">취소</button>\r\n");
      out.write("			<button class=\"btn btn-primary\" onclick=\"checkForm()\">전송</button>\r\n");
      out.write("		</div>\r\n");
      out.write("	</form>\r\n");
      out.write("</body>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
